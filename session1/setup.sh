#!/usr/bin/env bash
# setup_env.sh — Minimal common environment setup for Session 1 Labs
# 1. Exports RG, SUBSCRIPTION_ID, LOCATION, TENANT_ID into .env and sources it
# 2. Creates the project structure for azure-access-control labs
# 3. Ensures the common Azure Resource Group exists (demo-rg by default)
# ⚠️ Add ".env" to your .gitignore before committing!

set -euo pipefail

# Defaults
LOCATION="${LOCATION:-australiaeast}"
RG="${RG:-demo-rg}"

# Optional tag (helps if Require-Tag policy is enabled); override via env if desired
TAG_KEY="${TAG_KEY:-owner}"
TAG_VALUE="${TAG_VALUE:-georges}"

info()  { echo -e "🔵 \033[1;34m[INFO]\033[0m $*"; }
error() { echo -e "❌ \033[1;31m[ERR ]\033[0m $*" >&2; }
success() { echo -e "✅ \033[1;32m[SUCCESS]\033[0m $*"; }

# --- 1) Sanity checks ---
if ! command -v az >/dev/null 2>&1; then
  error "Azure CLI not found. Install from https://aka.ms/azcli"
  exit 1
fi

if ! az account show >/dev/null 2>&1; then
  error "You are not logged in. Run: az login"
  exit 1
fi

# --- 2) Capture subscription + tenant ---
SUBSCRIPTION_ID="$(az account show --query id -o tsv)"
TENANT_ID="$(az account show --query tenantId -o tsv)"

info "Subscription: $SUBSCRIPTION_ID"
info "Tenant:       $TENANT_ID"
info "Location:     $LOCATION"
info "ResourceGroup (common): $RG"

# --- 3) Export to .env (only the requested vars) ---
ENV_FILE=".env"
cat > "$ENV_FILE" <<EOF
# Auto-generated by setup_env.sh
export LOCATION="$LOCATION"
export SUBSCRIPTION_ID="$SUBSCRIPTION_ID"
export TENANT_ID="$TENANT_ID"
export RG="$RG"
EOF

echo ".env" >> .gitignore

success "Wrote environment file: $ENV_FILE"

# --- 4) Source .env so values are ready ---
# shellcheck disable=SC1090
source "$ENV_FILE"
success "Sourced $ENV_FILE. Environment ready."

# --- 6) Ensure common Azure Resource Group exists ---
info "Ensuring common Resource Group '$RG' in '$LOCATION' (with tag $TAG_KEY=$TAG_VALUE)..."
az group create -n "$RG" -l "$LOCATION" --tags "$TAG_KEY=$TAG_VALUE" >/dev/null
success "Resource Group ready: $RG ($LOCATION)"

# --- 5) Create project structure (empty files) ---
ROOT="azure-access-control"

info "Project structure: $ROOT/ ..."
tree -L 3 "$ROOT" || true  # Ignore if tree not installed
# # Allowed VM Sizes
# mkdir -p "$ROOT/allowed-vm-sizes/definition"
# mkdir -p "$ROOT/allowed-vm-sizes/assignment"
# mkdir -p "$ROOT/allowed-vm-sizes/scripts"
# touch "$ROOT/allowed-vm-sizes/definition/policy.json"
# touch "$ROOT/allowed-vm-sizes/assignment/assign.bicep"
# touch "$ROOT/allowed-vm-sizes/assignment/parameters.json"

# # Require Tag
# mkdir -p "$ROOT/require-tag/definition"
# mkdir -p "$ROOT/require-tag/assignment"
# mkdir -p "$ROOT/require-tag/scripts"
# touch "$ROOT/require-tag/definition/policy.json"
# touch "$ROOT/require-tag/assignment/assign.bicep"
# touch "$ROOT/require-tag/assignment/parameters.json"

# success "Project structure created under $ROOT/ 🎉"


